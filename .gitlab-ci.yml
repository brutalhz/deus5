stages:          # List of stages for jobs, and their order of execution
  - build
  - release
  - deploy

variables:
  PROJECT_NAME: '${CI_PROJECT_NAME}'
  IMAGE_NAME: '${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}'

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build --pull -t ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA} .
    - docker push ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}
  tags:
    - dev-docker
  rules:
    - if: $$CI_COMMIT_BRANCH =~ /^feature/ && $CI_COMMIT_REF_NAME =~ /^feature/

deploy-dev:
  stage: deploy
  image: docker:stable
  script:
    - chmod og= $SSH_PRIVATE_KEY
    - apt-get update && apt-get install openssh-client git
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ubuntu@192.168.244.186 "docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ubuntu@192.168.244.186 "docker pull ${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ubuntu@192.168.244.185 "docker container rm -f ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA} || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no ubuntu@192.168.244.186 "docker run --name ${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA} -d -p 127.0.0.1:1313:1313 --restart unless-stopped ${IMAGE_NAME}:${CI_COMMIT_REF_SLUG}"
    - echo "Application successfully deployed."
  only:
    - develop
  tags:
    - dev-docker
